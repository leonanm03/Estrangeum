// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique @db.VarChar(255)
  password     String         @db.VarChar(255)
  name         String         @db.VarChar(255)
  type         UserType       @default(USER)
  image_url    String?        @db.VarChar(255)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Session      Session[]
  Subscription Subscription[]
}

model Session {
  id        Int      @id @default(autoincrement())
  token     String
  user_id   Int
  User      User     @relation(fields: [user_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Object {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  description String
  category    Category
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ObjectImage ObjectImage[]
}

model ObjectImage {
  id        Int      @id @default(autoincrement())
  object_id Int
  image_url String
  Object    Object   @relation(fields: [object_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Category {
  ALIEN
  MYSTERY
  HAUNTED
  MAGIC
  OTHER
}

model Subscription {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  description       String
  category          Category
  status            Status              @default(PENDING)
  user_id           Int
  User              User                @relation(fields: [user_id], references: [id])
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  SubscriptionImage SubscriptionImage[]
}

model SubscriptionImage {
  id              Int          @id @default(autoincrement())
  subscription_id Int
  image_url       String
  Subscription    Subscription @relation(fields: [subscription_id], references: [id])
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum UserType {
  USER
  ADMIN
}
